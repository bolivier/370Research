a=10
b = a
b + 1
b += 1
b = b + 1
library(RCurl)
library(shiny)
# Limit the query to 10,000 items to speed up shiny app (nbd for now)
s <- getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select *  from DIAMONDS where ROWNU"'),
httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:orcl',
USER='C##cs370_nos98',
PASS='orcl_nos98',
MODE='native_mode',
MODEL='model',
returnFor = 'R'),
verbose = TRUE)
library(RCurl)
library(shiny)
# Limit the query to 10,000 items to speed up shiny app (nbd for now)
s <- getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select *  from DIAMONDS where ROWNUM <= 500"'),
httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:orcl',
USER='C##cs370_nos98',
PASS='orcl_nos98',
MODE='native_mode',
MODEL='model',
returnFor = 'R'),
verbose = TRUE)
setwd("~/Programming/Research/Shiny")
sdf <- data.frame(eval(parse(text=substring(s, 1, 2^31-1))))
typeof(sdf)
typeof(diamonds)
library(ggplot2)
typeof(diamonds)
sdf <- data.frame(eval(parse(text=substring(s, 1, 2^31-1))))
shinyServer(function(input, output) {
# a large table, reative to input$show_vars
output$mytable1 <- renderDataTable({
sdf[, input$show_vars, drop = FALSE]
})
})
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
sdf[]
shiny::runApp()
sdf[, input$show_vars]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='brandonolivier',
token='B0C046610B602EA3F5C1B6D8F3BBB3AB',
secret='aGM+MYzPZ1JKaj93My5NkpOxgRlrQSJOq25lVWp5')
library(shinyapps)
shinyapps::deployApp('./')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shinyapps::deployApp('./')
shinyapps::deployApp('./')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
[1 2 3]
[1, 2, 3]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shinyapps::deployApp('./')
